// Support for Consolation Prize: Doom 64
// This is mostly copy-pasted from metaoptional.zsc

// Based on some really confusingly-formatted code by Matt
// https://forum.zdoom.org/viewtopic.php?f=122&t=60916&p=1058774

class MetaDoom64Replacements : EventHandler
{
    override void WorldTick() //WorldLoaded(WorldEvent e)
	{
		actor actormans=null;
		array<actor>actormansdelend;		
		
		// The last entry is ignored for some stupid reason.
		int replaceables = 8;
		
		static const string oldActor[] =
		{
			// Doom 64 Consolation Prize
			"64NightmareImp","Unmaker","UnmakerUpgrade1","UnmakerUpgrade2","UnmakerUpgrade3",
			// Doom 64 for Doom 2
			"NightmareImp", "NightmareCacodemon", "D64D2Cyberdemon",
			// Thing What Makes The Array Work
			"IGNOREME"
		};
		
		static const string newActor[] =
		{
			// Doom 64 Consolation Prize
			"NightmareImpSpawner","UnmakerSpawner","UnmakerKey1Spawner","UnmakerKey2Spawner","UnmakerKey3Spawner",
			// Doom 64 for Doom 2
			"MetaNightmareImp", "MetaWretched", "CyberdemonSpawner_D64D2",
			// Thing What Makes The Array Work
			"IGNORETHISMAN"
			
		};
		

		for(int i = 0; i < (replaceables); i++)
		{
			thinkeriterator actorreplacer;
			actorreplacer = thinkeriterator.create(oldActor[i]);
			
			while(actormans=actor(actorreplacer.next()))
			{
				class<actor> newactor=newActor[i];
				Actor newguy = actormans.spawn(newactor,actormans.pos);
				
				// Copying over the pertinent details.
				// This could probably be done way better, but this works and doesn't,
				// like, crash the engine, so fuck it. In it goes!
				newguy.spawnangle = actormans.spawnangle;
				newguy.angle = actormans.angle;
				newguy.pitch = actormans.pitch;
				newguy.roll = actormans.roll;
				newguy.copyfriendliness(actormans, false);
				newguy.spawnflags = actormans.spawnflags & ~MTF_SECRET;
				newguy.handlespawnflags();
				newguy.changetid(actormans.tid);
				newguy.master = actormans.master;
				newguy.target = actormans.target;
				newguy.tracer = actormans.tracer;
				newguy.args[0] = actormans.args[0];
				newguy.args[1] = actormans.args[1];
				newguy.args[2] = actormans.args[2];
				newguy.args[3] = actormans.args[3];
				newguy.args[4] = actormans.args[4];
				newguy.special = actormans.special;
				newguy.special1 = actormans.special1;
				newguy.special2 = actormans.special2;
				newguy.vel = actormans.vel;
				
				//if (meta_developer) { console.printf("%s replaced with %s", oldActor[i], newActor[i]); }
				
				//time to handle removals
				actormans.A_Remove(AAPTR_DEFAULT);
				actormans.destroy();
			}
			
		}
    }
}