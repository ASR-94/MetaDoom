// Implement Optional Content as a CVar instead of a side-mod
// Based on some really confusingly-formatted code by Matt
// https://forum.zdoom.org/viewtopic.php?f=122&t=60916&p=1058774

class MetaOptional : EventHandler
{
    override void WorldTick() //WorldLoaded(WorldEvent e)
	{
		actor actormans=null;
		array<actor>actormansdelend;
		thinkeriterator actorreplacer;
		
		// The last entry is ignored for some stupid reason.
		int replaceables = 43;
		
		static const string oldActor[] =
		{
			"WolfensteinSS", "CommanderKeen",
			
			"ScriptedMarine", "MarineFist", "MarineBerserk", "MarineChainsaw",
			"MarinePistol", "MarineShotgun", "MarineSSG", "MarineChaingun",
			"MarineRocket", "MarinePlasma", "MarineRailgun", "MarineBFG",
			
			"Gibs", "BrainStem", "ColonGibs", "SmallBloodPool", 
			"BloodyTwitch", "NonsolidTwitch", "DeadStick", "LiveStick", 
			"Meat2", "Meat3", "Meat4", "Meat5", 
			"NonsolidMeat2", "NonsolidMeat3", "NonsolidMeat4", "NonsolidMeat5", 
			"HangBNoBrain", "HangNoGuts", "HangTLookingDown", "HangTLookingUp", 
			"HangTNoBrain", "HangTSkull", 
			
			"DeadCacodemon", "DeadDemon", "DeadDoomImp", "DeadMarine",
			"DeadZombieman", "DeadShotgunGuy", "GibbedMarine", "IGNOREME"
		};
		
		static const string newActor[] =
		{
			"WolfSSSpawner", "KeenSpawner",
			
			"MetaScriptedMarine", "MetaMarineFist", "MetaMarineBerserk", "MetaMarineChainsaw",
			"MetaMarinePistol", "MetaMarineShotgun", "MetaMarineSSG", "MetaMarineChaingun",
			"MetaMarineRocket", "MetaMarinePlasma", "MetaMarineRailgun", "MetaMarineBFG",
			
			"MetaCrushedProp", "MetaBrainStem", "MetaColonGibs", "MetaSmallBloodPool", 
			"MetaBloodyTwitch", "MetaNonsolidTwitch", "MetaDeadStick", "MetaLiveStick", 
			"MetaMeat2", "MetaMeat3", "MetaMeat4", "MetaMeat5", 
			"MetaNonsolidMeat2", "MetaNonsolidMeat3", "MetaNonsolidMeat4", "MetaNonsolidMeat5", 
			"MetaHangBNoBrain", "MetaHangNoGuts", "MetaHangTLookingDown", "MetaHangTLookingUp", 
			"MetaHangTNoBrain", "MetaHangTSkull", 
			
			"DeadCacodemon", "MetaDeadPinky", "MetaDeadDoomImp", "MetaDeadMarine",
			"MetaDeadZombieman", "MetaDeadShotgunGuy", "MetaGibbedMarine", "IGNORETHISMAN"
			
		};
		
		if (meta_optional)
		{
			for(int i = 0; i < (replaceables); i++)
			{
				actorreplacer = thinkeriterator.create(oldActor[i]);
				
				while(actormans=actor(actorreplacer.next()))
				{
					class<actor> newactor=newActor[i];
					Actor newguy = actormans.spawn(newactor,actormans.pos);
					
					// Copying over the pertinent details.
					// This could probably be done way better, but this works and doesn't,
					// like, crash the engine, so fuck it. In it goes!
					newguy.spawnangle = actormans.spawnangle;
					newguy.angle = actormans.angle;
					newguy.pitch = actormans.pitch;
					newguy.roll = actormans.roll;
					newguy.copyfriendliness(actormans, false);
					newguy.spawnflags = actormans.spawnflags & ~MTF_SECRET;
					newguy.handlespawnflags();
					newguy.changetid(actormans.tid);
					newguy.master = actormans.master;
					newguy.target = actormans.target;
					newguy.tracer = actormans.tracer;
					newguy.args[0] = actormans.args[0];
					newguy.args[1] = actormans.args[1];
					newguy.args[2] = actormans.args[2];
					newguy.args[3] = actormans.args[3];
					newguy.args[4] = actormans.args[4];
					newguy.special = actormans.special;
					newguy.special1 = actormans.special1;
					newguy.special2 = actormans.special2;
					newguy.vel = actormans.vel;
					
					//time to handle removals
					actormans.destroy();
					
					//if (meta_developer) { console.printf("%s replaced with %s", oldActor[i], newActor[i]); }
				}
			}
			
			while(actormansdelend.size()>0)
			{
				actormansdelend[0].destroy();
				actormansdelend.delete(0);
			}
		}
    }
}