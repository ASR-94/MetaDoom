/*
----------------------------
MetaDoom
Actor Definitions
Core Actors
----------------------------
*/

// Horrible remains of the pre-ZScript era. Legacy codebases, eh?

class _Boolean : Inventory
{
    Default
	{
	Inventory.MaxAmount 1;
    +Inventory.UNDROPPABLE
    -Inventory.INVBAR
	}
}

class Counter : Inventory
{
    Default
	{    
	Inventory.MaxAmount 0x7FFFFFFF;
    +Inventory.UNDROPPABLE
    -Inventory.INVBAR
	}
}

class Trigger : CustomInventory
{
    Default
	{
    Inventory.MaxAmount 0;
    +Inventory.AUTOACTIVATE
	}
}

// Let's learn what the hell mixins are.

mixin class LootSpawn
{
	vector2 neckchecker;
	
	// Try and spawn loot in a more normal way. I've rewritten this like five
	// friggin' times in one day...
	// Thanks to Boondorl and Comet for helping jog my hole-riddled brain!
	void A_SpawnLoot(string item)
	{
		actor newitem = Actor.Spawn(item, self.pos);
		
		newitem.angle = random(0,360);		
		newitem.speed = 2;
		int oldradius;
		bool lavadive = false;
		oldradius = newitem.radius;
		newitem.A_SetSize(8);
		
		for (int i = 0; i < 64; i++)
		{
			newitem.A_Wander();
			
			if (level.PointInSector((newitem.pos.x,newitem.pos.y)).damageamount != 0)
			{
				newitem.maxstepheight = 128;
				//newitem.setOrigin(self.pos, false);
				lavadive = true;
				i--;
			}
		}
		newitem.A_SetSize(oldradius);
		
		if (meta_developer)
		{
			if (!lavadive)
			{
				Console.printf("Item: %s successfully placed at %i x %i", item, newitem.pos.x, newitem.pos.y);
			} else {
				Console.printf("Item: %s at %i x % i tried to take a lava dive, ended up at %i x %i", item, self.pos.x, self.pos.y, newitem.pos.x, newitem.pos.y);
			}
		}
	}
	
	virtual void DoNeckChecker()
	{
		// Make something resembling an effort to not swan-dive into toxic waste.
		// Not perfect, but that probably makes it more realistic...
		
		
		if (level.IsPointInLevel((neckchecker.x, neckchecker.y, GetZAt(neckchecker.x, neckchecker.y)))
		&& level.PointInSector(neckchecker).damageamount != 0
		&& self.CurSector.damageamount == 0
		&& self.pos.z == self.floorz && health > 0)
		{
			A_Recoil(10);
			self.angle = self.angle + 180;
		}
	}
}