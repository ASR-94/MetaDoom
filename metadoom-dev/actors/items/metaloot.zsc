/*
----------------------------
MetaDoom
Actor Definitions
Score Items
----------------------------
*/

// Pointless but fun, these items do nothing but look nice and increase your score.

// 25% chance of spawning a low-scoring item
// 12.5% chance of spawning a high-scoring item
// Figurines have been moved to metaloreitems.zsc
class LootSpawner : Actor
{
	Default
	{
		radius 64;
		height 32;
	}
	
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_Jump(64, "Loot1", "Loot2", "Loot6", "Loot7");
		TNT1 A 0 A_Jump(32, "Loot3", "Loot4", "Loot5");
		stop;
	Loot1:
		TNT1 A 0 A_SpawnLoot("LootDagger"); //A_SpawnItemEx("LootDagger",0,0,0,random(1,16),random(1,16),0,random(0,360));
		stop;
	Loot2:
		TNT1 A 0 A_SpawnLoot("LootChest"); //A_SpawnItemEx("LootChest",0,0,0,random(1,16),random(1,16),0,random(0,360));
		stop;
	Loot3:
		TNT1 A 0 A_SpawnLoot("LootSceptre"); //A_SpawnItemEx("LootSceptre",0,0,0,random(1,16),random(1,16),0,random(0,360));
		stop;
	Loot4:
		TNT1 A 0 A_SpawnLoot("LootBible"); //A_SpawnItemEx("LootBible",0,0,0,random(1,16),random(1,16),0,random(0,360));
		stop;
	Loot5:
		TNT1 A 0 A_SpawnLoot("LootCrown"); //A_SpawnItemEx("LootCrown",0,0,0,random(1,16),random(1,16),0,random(0,360));
		stop;
	Loot6:
		TNT1 A 0 A_SpawnLoot("LootGoblet"); //A_SpawnItemEx("LootGoblet",0,0,0,random(1,16),random(1,16),0,random(0,360));
		stop;
	Loot7:
		TNT1 A 0 A_SpawnLoot("LootCredits"); //A_SpawnItemEx("LootCredits",0,0,0,random(1,16),random(1,16),0,random(0,360));
		stop;
	}
	
	// Try and spawn loot in a more normal way before using the weird old way.
	void A_SpawnLoot(string item)
	{
		int xpos = random((self.pos.x - 256), (self.pos.x + 256));
		int ypos = random((self.pos.y - 256), (self.pos.y + 256));
		bool dunnit = false;
		int tries = 0;
		
		Vector3 dongs = (xpos, ypos, GetZAt(xpos,ypos));
		until (dunnit == true || tries > 100)
		{
			if (level.IsPointInMap(dongs))
			{
				Actor.Spawn(item, dongs);
				if (meta_developer)
					Console.printf("Loot: %s spawned at %ix%i", item, xpos, ypos);
				dunnit = true;
			} else {
				xpos = random((self.pos.x - 256), (self.pos.x + 256));
				ypos = random((self.pos.y - 256), (self.pos.y + 256));
				tries++;
			}
		}
		
		// If the new way doesn't work, settle for the old way.
		if (dunnit == false && tries > 100)
		{
			if (meta_developer)
					Console.printf("Loot: %s failed at at %ix%i, using old method", item, self.pos.x, self.pos.y);
			A_SpawnItemEx(item,0,0,0,random(1,16),random(1,16),0,random(0,360));
		}
	}
}

class LootItem : ScoreItem
{
	Default
	{
		Inventory.Amount 500;
		Inventory.PickupMessage "$GOTLOOT6";
		inventory.pickupsound "items/loot";
		BounceType "Grenade";
		Bouncefactor 0.0;
		WallBouncefactor 1.0;
		-COUNTITEM
		+BLOCKASPLAYER
	}
	
	States
	{
	Spawn:
		LOOT F 0;
		"####" "#" 0;
		goto MoveAround;
	MoveAround:
		"####" "#" 35;
		"####" "#" 0 A_Stop; // Prevents bouncing around wallsliding all day
		goto Sit;
	Sit:
		"####" "#" -1;
		loop;
	}
}

class LootGoblet : LootItem
{
	Default
	{
		Inventory.Amount 500;
		Inventory.PickupMessage "$GOTLOOT6";
	}
	
	States
	{
	Spawn:
		LOOT F 0;
		"####" "#" 0;
		goto MoveAround;
	}
}

class LootDagger : LootItem
{
	Default
	{
		Inventory.Amount 500;
		Inventory.PickupMessage "$GOTLOOT1";
	}
	
	States
	{
	Spawn:
		LOOT A 0;
		"####" "#" 0;
		goto MoveAround;
	}
}

class LootChest : LootItem
{
	Default
	{
		Inventory.Amount 1000;
		Inventory.PickupMessage "$GOTLOOT2";
	}
	
	States
	{
	Spawn:
		LOOT B 0;
		"####" "#" 0;
		goto MoveAround;
	}
}

class LootSceptre : LootItem
{
	Default
	{
		Inventory.Amount 1500;
		Inventory.PickupMessage "$GOTLOOT3";
	}
	
	States
	{
	Spawn:
		LOOT C 0;
		"####" "#" 0;
		goto MoveAround;
	}
}

class LootBible : LootItem
{
	Default
	{
		Inventory.Amount 2000;
		Inventory.PickupMessage "$GOTLOOT4";
	}
	
	States
	{
	Spawn:
		LOOT D 0;
		"####" "#" 0;
		goto MoveAround;
	}
}

class LootCrown : LootItem
{
	Default
	{
		Inventory.Amount 2500;
		Inventory.PickupMessage "$GOTLOOT5";
	}
	
	States
	{
	Spawn:
		LOOT E 0;
		"####" "#" 0;
		goto MoveAround;
	}
}

class LootCredits : LootItem
{
	Default
	{
		Inventory.Amount 500;
		Inventory.PickupMessage "$GOTLOOT7";
		scale 0.8;
	}
	
	States
	{
	Spawn:
		LOOT G 0;
		"####" "#" 0;
		goto MoveAround;
	}
}

