/*
----------------------------
MetaDoom
Actor Definitions
Arachnotron
----------------------------
*/

// The base monster actor, from which all monsters are inherited.
// See metadoomactor.zsc for the ZScript component of this actor.

// Inventory counters for certain behaviors. One day, I will refactor these
// into user variables. Today is not that day. Tomorrow? Not looking too crash
// hot either, honestly.
actor ScurredCounter : Counter { Inventory.MaxAmount 20 }
actor BleedingCounter : Counter { Inventory.MaxAmount 20 }

actor MonsterCore : MetaDoomActor
{
	painchance Fist, 255
	painchance Axe, 255
	painchance Vampire, 255
	painchance Bleeding, 0
	painchance SoulCube, 255
	damagefactor FireExtinguisher, 0
	damagefactor DogCollar, 0
	painchance DogCollar, 0
	States
	{
	// Siphon Grenade
	Pain.Vampire:
		"####" # 0 A_GiveToTarget ("Health", 1)
		"####" # 0 A_Jump(256,"Pain")
		stop
	// Fire Axe
	Pain.Axe:
		"####" # 0
		{
			A_GiveInventory("BleedingCounter", 4);
			A_MetaPinata("MetaHealthPinata", 3);
			ThrustThing(angle*256/360+128, 8, 1, 0);
		}
		"####" # 0 A_Jump(256,"Pain")
		stop
	Death.Axe:
		"####" # 0
		{
			A_FaceTarget;
			ThrustThing(angle*256/360+128, 8, 1, 0);
			A_MetaPinata("MetaHealthPinata", 5);
		}
		"####" # 0 A_Jump(256,"Death")
		stop
	XDeath.Axe:
		"####" # 0 
		{
			A_FaceTarget;
			ThrustThing(angle*256/360+128, 8, 1, 0);
			A_MetaPinata("MetaHealthPinata", 5);
		}
		"####" # 0 A_Jump(256,"XDeath")
		stop
	Death.Bleeding:
		"####" # 0
		{
			A_MetaPinata("MetaHealthPinata", 5);
		}
		"####" # 0 A_Jump(256,"Death")
		stop
	// Fists - Standard
	Pain.Fist:
		"####" # 0 
		{
			A_FaceTarget;
			ThrustThing(angle*256/360+128, 8, 1, 0);
			ThrustThingZ(0,32,0,1);
			A_MetaPinata("MetaHealthPinata", 2);
			A_ChangeFlag("FRIGHTENED", FALSE);
			A_TakeInventory("ScurredCounter",999);
		}
		"####" # 0 A_Jump(256,"Punched")
		stop
	Punched: // default for if actor doesn't have punched state
		"####" # 0 A_Jump(256,"Pain")
		stop
	Death.Fist:
		"####" # 0
		{
			A_FaceTarget;
			ThrustThing(angle*256/360+128, 8, 1, 0);
			ThrustThingZ(0,32,0,1);
			A_MetaPinata("MetaHealthPinata", 5);
		}
		"####" # 0 A_Jump(256,"Death")
		stop
	XDeath.Fist:
		"####" # 0 
		{
			A_FaceTarget;
			ThrustThing(angle*256/360+128, 8, 1, 0);
			ThrustThingZ(0,32,0,1);
			A_MetaPinata("MetaHealthPinata", 10);
		}
		"####" # 0 A_Jump(256,"XDeath")
		stop
	// Fists - Berserker
	Pain.BerserkFist:
		"####" # 0 
		{
			A_FaceTarget;
			ThrustThing(angle*256/360+128, 64, 1, 0);
			ThrustThingZ(0,32,0,1);
			A_MetaPinata("MetaHealthPinata", 1);
			A_ChangeFlag("FRIGHTENED", FALSE);
			A_TakeInventory("ScurredCounter",999);
		}
		"####" # 0 A_Jump(256,"Pain")
		stop
	Death.BerserkFist:
		"####" # 0
		{
			A_FaceTarget;
			ThrustThing(angle*256/360+128, 64, 1, 0);
			ThrustThingZ(0,32,0,1);
			A_MetaPinata("MetaHealthPinata", 2);
		}
		"####" # 0 A_Jump(256,"Death")
		stop
	XDeath.BerserkFist:
		"####" # 0 
		{
			A_FaceTarget;
			ThrustThing(angle*256/360+128, 64, 1, 0);
			ThrustThingZ(0,32,0,1);
			A_MetaPinata("MetaHealthPinata", 3);
		}
		"####" # 0 A_Jump(256,"XDeath")
		stop
	// "kill monsters" cheat, to avoid the framerate exploding
	Death.Massacre:
		"####" # 0 A_Jump(256,"Death")
		stop
	// SoulCube
	Pain.SoulCube:
		"####" # 0
		{
			A_MetaPinata("MetaHealthPinataPerm", 12);
			A_MetaPinata("MetaArmorPinata", 12);
			A_MetaPinata("MetaPinataClip", 12);
			A_MetaPinata("MetaPinataShell", 12);
			A_MetaPinata("MetaPinataRocket", 12);
			A_MetaPinata("MetaPinataCell", 12);
		}
		"####" # 0 A_Jump (256, "Pain")
		stop
	Death.SoulCube:
	XDeath.SoulCube:
		"####" # 0
		{
			A_MetaPinata("MetaHealthPinataPerm", 12);
			A_MetaPinata("MetaArmorPinata", 12);
			A_MetaPinata("MetaPinataClip", 12);
			A_MetaPinata("MetaPinataShell", 12);
			A_MetaPinata("MetaPinataRocket", 12);
			A_MetaPinata("MetaPinataCell", 12);			
		}
		"####" # 0 A_Jump (256, "XDeath")
		stop
	// General purpose catchall to prevent errors when an actor that doesn't have an XDeath tries to jump to an XDeath
	XDeath:
		"####" # 0 A_Jump (256, "Death")
		stop
	}
}

// SQUISH!
ACTOR MetaCrush replaces RealGibs
{
	+DROPOFF
	+CORPSE
	+NOTELEPORT
	+DONTGIB
	States
	{
		Spawn:
			POL5 A 0
			POL5 A 0 
			{	
				A_PlaySound("monsters/crushed");
				A_CustomMissile ("FlyingBlood", random(8,32), 0, random (0, 360), 2, random (0, 160));
				A_CustomMissile ("FlyingBlood", random(8,32), 0, random (0, 360), 2, random (0, 160));
				A_CustomMissile ("FlyingBlood", random(8,32), 0, random (0, 360), 2, random (0, 160));
				A_CustomMissile ("MetaSploosh", random(8,32), 0, random (0, 360), 2, random (0, 160));
				A_CustomMissile ("MetaSploosh", random(8,32), 0, random (0, 360), 2, random (0, 160));
				A_CustomMissile ("MetaSploosh", random(8,32), 0, random (0, 360), 2, random (0, 160));
				A_SpawnItem("BloodSplat");
			}
			POL5 A -1
			Stop
	}
}

// Wild Weasel's tracers. Again. Yup.

ACTOR MonsterTracer : FastProjectile
{
	Alpha 0.90
	RenderStyle Add
	Radius 2
	Height 2
	Speed 50
	PROJECTILE
	+BLOODSPLATTER
	Scale 0.4
	MissileType MonsterTracerTrail
	MissileHeight 8
	Decal BulletChip
	States
	{
	Spawn:
		PUFF A 1 BRIGHT
		PUFF A 1 BRIGHT A_CheckSightOrRange(192,"Whiz")
		Loop
	Whiz:
		PUFF A 1 BRIGHT A_PlaySound("whiz",1.0,0,ATTN_NONE)
	SpawnNoWhiz:
		PUFF A 1 BRIGHT
		Loop
	Death:
	Crash:
		PUFF A 2 BRIGHT A_SpawnDebris("MonsterTracerSpark")
		PUFF B 1 BRIGHT A_SetTranslucent(0.9,0)
		PUFF B 1 BRIGHT A_PlaySound("ricochet")
		PUFF CD 2 BRIGHT
		Stop
	XDeath:
		TNT1 A 3 A_PlaySound("hitflesh")
		Stop
	}
}

ACTOR MonsterTracerTrail
{ 
	Alpha 0.75
	RenderStyle Add
	Speed 0
	+NOBLOCKMAP
	+NOGRAVITY
	+NOTELEPORT
	+CANNOTPUSH
	+NODAMAGETHRUST
	Scale 0.4
	States
	{
	Spawn:
		PUFF A 1 BRIGHT A_FadeOut(0.3)
		Loop
	}
}

ACTOR MonsterTracerSpark
{
	Health 4
	radius 3
	height 6
	speed .1
	RenderStyle ADD
	Alpha		1
	Scale 0.5
	Mass		0
	+missile
	+doombounce
	+FLOORCLIP
	+DONTSPLASH
	+NOTELEPORT
	States
	{
		PUFF A 1
		PUFF AAAAA 1  Bright A_SetTranslucent(.8,1)
		PUFF AAAAAA 1  Bright A_SetTranslucent(.6,1)
		PUFF AAAAAAAA 1  Bright A_SetTranslucent(.4,1)
		PUFF AAAAAAAAAA 1 Bright A_SetTranslucent(.2,1)
		Stop
	}
}

// Monster Damage

ACTOR MonsterZombiemanTracer : MonsterTracer
{
	Damage (random(1,4))
}

ACTOR MonsterShotgunGuyTracer : MonsterTracer
{
	Damage (random(1,5)*3)
}

ACTOR MonsterCommandoTracer : MonsterTracer
{
	Damage (random(1,3))
}