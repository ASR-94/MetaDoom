/*
----------------------------
MetaDoom
Actor Definitions
Spectre
----------------------------
*/

// The original method of defining Spectres, retuned to use MetaDoom's Pinkies
// as a base.

class MetaSpectre : MetaDemon
{
	Default
	{
		+SHADOW;
		RenderStyle "OptFuzzy";
		Alpha 0.5;
		SeeSound "monsters/pinky/see";
		AttackSound "monsters/pinky/attack";
		PainSound "monsters/pinky/pain";
		DeathSound "monsters/pinky/die";
		ActiveSound "monsters/pinky/idle";
		HitObituary "$OB_SPECTREHIT";
	}
}

// The Nightmare Spectre from PSX Doom has more health, semitransparency and
// doesn't speed up in Nightmare. Confusingly.

class MetaNightmareSpectre : MetaDemon
{
	Default
	{
		+SHADOW
		RenderStyle "Subtract";
		Alpha 0.5;
		Health 250;
		Speed 12;
		FastSpeed 12;
		SeeSound "monsters/nightmarespectre/see";
		AttackSound "monsters/nightmarespectre/bite";
		PainSound "monsters/nightmarespectre/pain";
		DeathSound "monsters/nightmarespectre/die";
		ActiveSound "monsters/nightmarespectre/act";
		HitObituary "$OB_SPECTRENIGHTMARE";
		scale 0.75;
		yscale 0.65;
	}

	States
	{
	Spawn:
		NARG AB 10 A_Look;
		Loop;
	See:
		NARG A 0 A_MetaBleed("FlyingBlood");
		NARG AABBCCDD 2 A_Chase;
		Loop;
	Melee:
		NARG EF 8 A_FaceTarget;
		NARG G 8 A_SargAttack;
		Goto See;
	Pain:
		NARG H 0;
		NARG H 2 
		{
			bFRIGHTENED = 0;
			A_TakeInventory("ScurredCounter",999);
		}
		NARG H 2 A_Pain;
		Goto See;
	Pain.HolyWater:
		NARG H 3;
		NARG H 3 A_Pain;
		Goto Scurred;
	Punched:
		NARG H 3;
		NARG H 3
		{
			bFRIGHTENED = 0;
			A_TakeInventory("ScurredCounter",999);
		}
		NARG H 12 A_Pain;
		Goto See;
	Scurred:
		NARG A 0 { bFRIGHTENED = 1; }
	ScurredLoop:
		NARG A 0 Fast A_GiveInventory("ScurredCounter", 1);
		NARG A 2 Fast A_Chase(null, null);
		NARG A 2 Fast A_Chase(null, null);
		NARG A 0 Fast A_SpawnItem("HolySweat",0,54);
		NARG B 2 Fast A_Chase(null, null);
		NARG B 2 Fast A_Chase(null, null);
		NARG C 2 Fast A_Chase(null, null);
		NARG C 2 Fast A_Chase(null, null);
		NARG C 0 Fast A_SpawnItem("HolySweat",0,54);
		NARG D 2 Fast A_Chase(null, null);
		NARG D 2 Fast A_Chase(null, null);
		NARG D 0 Fast A_JumpIfInventory("ScurredCounter", 6, "ScurredEnd");
		loop;
	ScurredEnd:
		NARG D 0
		{
			bFRIGHTENED = 0;
			A_TakeInventory("ScurredCounter",999);
		}
		goto See;
	Death:
		NARG I 0 { bSPRITEFLIP = random(0,1); } // random chance of sprite flipping
		TNT1 A 0 A_SpawnItem("SoulSpawner");
		NARG I 8 A_GiveToTarget("ScoreItem", 200);
		NARG J 8 A_Scream;
		NARG K 4;
		NARG L 4 A_NoBlocking;
		NARG M 4 A_PlaySound("bodyfalls/heavy");
		NARG N -1;
		Stop;
	XDeath:
		TNT1 A 0 A_SpawnItem("SoulSpawner");
		NARG I 5 A_GiveToTarget("ScoreItem", 200);
		TNT1 A 0 A_SpawnItemEx("MetaGibber",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS);
		Stop;
	Raise:
		NARG N 5 { bSPRITEFLIP = 0; }
		NARG MLKJI 5;
		Goto See;
	}
}

// Surprise! The Sawcubus from Doom 2 RPG is here at the last minute!
// It imitates the classic player Chainsaw attack, naturally.

class MetaSawcubus : MonsterCore
{
	Default
	{
		Health 160;
		Radius 20;
		Height 56;
		Mass 100;
		Speed 13;
		PainChance 200;
		Monster;
		+FLOORCLIP
		SeeSound "monsters/chainsawgoblin/see";
		PainSound "monsters/chainsawgoblin/pain";
		DeathSound "monsters/chainsawgoblin/die";
		Obituary "$OB_SAWCUBUS";
		painchance "HolyWater", 255;
	}

	States
	{
	Spawn:
		CGOB A 0;
		CGOB A 0 A_StopSound(CHAN_7);
		CGOB AB 10 A_Look;
		Loop;
	See:
		"####" A 0 A_MetaBleed("FlyingBlood");
		CGOB A 0 A_PlaySound("monsters/chainsawgoblin/loop", CHAN_7, 1.0, 1);
		CGOB ABCD 3
		{
			A_Chase();
			
			if (!CheckIfSeen()) // optimisation: don't spawn if not visible, duh
			{
				A_SpawnItemEx("SawcubusSmokeTrail",0,16,32,0,0,random(0,3));
			}
		}
		Loop;
	Melee:
		CGOB E 0 A_PlaySound("monsters/chainsawgoblin/attack");
		CGOB E 4
		{
			A_FaceTarget();
			A_M_Saw ("weapons/chainsaw/slash", "weapons/chainsaw/slashhit");
			ThrustThing(angle*256/360,2,0,0);
			A_SpawnItemEx("SawcubusSmokeTrail",0,16,32,0,0,random(0,3));
		}
		CGOB F 4;
		Goto See;
	Pain:
		CGOB G 0;
		CGOB G 2
		{
			bFRIGHTENED = 0;
			A_TakeInventory("ScurredCounter",999);
		}
		CGOB G 2 A_Pain;
		Goto See;
	Pain.HolyWater:
		CGOB G 3;
		CGOB G 3 A_Pain;
		Goto Scurred;
	Punched:
		CGOB G 3;
		CGOB G 3
		{
			bFRIGHTENED = 0;
			A_TakeInventory("ScurredCounter",999);
		}
		CGOB G 12 A_Pain;
		Goto See;
	Scurred:
		CGOB A 0 { bFRIGHTENED = 1; }
	ScurredLoop:
		CGOB A 0 A_GiveInventory("ScurredCounter", 1);
		CGOB A 2 { A_Chase(null, null); A_SpawnItemEx("SawcubusSmokeTrail",0,16,32,0,0,random(0,3)); }
		CGOB A 0 A_SpawnItem("HolySweat",0,54);
		CGOB B 2 { A_Chase(null, null); A_SpawnItemEx("SawcubusSmokeTrail",0,16,32,0,0,random(0,3)); }
		CGOB C 2 { A_Chase(null, null); A_SpawnItemEx("SawcubusSmokeTrail",0,16,32,0,0,random(0,3)); }
		CGOB C 0 A_SpawnItem("HolySweat",0,54);
		CGOB D 2 { A_Chase(null, null); A_SpawnItemEx("SawcubusSmokeTrail",0,16,32,0,0,random(0,3)); }
		CGOB D 0 A_JumpIfInventory("ScurredCounter", 6, "ScurredEnd");
		loop;
	ScurredEnd:
		CGOB D 0
		{
			bFRIGHTENED = 0;
			A_TakeInventory("ScurredCounter",999);
		}
		goto See;
	Death:
		CGOB H 0 A_StopSound(CHAN_7);
		CGOB H 0 { bSPRITEFLIP = random(0,1); } // random chance of sprite flipping
		CGOB H 0 A_SpawnItem("SoulSpawner");
		CGOB H 8 A_GiveToTarget("ScoreItem", 150);
		CGOB I 8 A_Scream;
		CGOB J 6 A_PlaySound("bodyfalls/medium");
		CGOB K 6 A_NoBlocking;
		CGOB L -1;
		Stop;
	XDeath:
		TNT1 A 0 A_SpawnItem("SoulSpawner");
		TNT1 A 0 A_SpawnItemEx("MetaChainsaw",0,0,0,0,0,10,0,0,128);
		CGOB H 5 A_GiveToTarget("ScoreItem", 150);
		TNT1 A 0 A_SpawnItemEx("MetaGibber",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS);
		Stop;
	Raise:
		CGOB L 0 { bSPRITEFLIP = 0; }
		CGOB LKJIH 8;
		Goto See;
	}
}

class SawcubusSmokeTrail : Actor
{
	Default
	{
		+NOBLOCKMAP
		+NOGRAVITY
		+ALLOWPARTICLES
		+RANDOMIZE
		RenderStyle "Translucent";
		Alpha 0.5;
		VSpeed 1;
		Mass 5;
	}

	States
	{
	Spawn:
		PUFF A 0;
		PUFF ABCD 4;
		Stop;
	}
}