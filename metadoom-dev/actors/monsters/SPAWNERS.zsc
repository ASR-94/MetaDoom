/*
----------------------------
MetaDoom
Actor Definitions
Spawners
----------------------------
*/

// These "radar" actors let spawners tell each other what's nearby, allowing me
// to "weigh" spawns based on what's nearby
class PossessedRadar : _Boolean {}

class MetaSpawner : Actor
{
	Default
	{
		+ISMONSTER
		-COUNTKILL
	}
}

class ZombiemanSpawner : MetaSpawner replaces ZombieMan
{
	States
	{
	Spawn:
		POSS A 0;
		TNT1 A 0 A_RadiusGive ("PossessedRadar", 512, RGF_MONSTERS);
		TNT1 A 0 A_JumpIf(meta_noalts_actors, "Zombieman");
		TNT1 A 0 A_JumpIf(meta_contentlocust, "ContentLocustVarietyPack");
		TNT1 A 0 A_JumpIf(meta_episodicspawns && CallACS("Item_GameDetector", 0, 0, 0) >= 2, "EpisodicSelector");
		goto Doom2Selector;
	EpisodicSelector:
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 2, "Tier2");
		goto Zombieman;
	Doom2Selector:
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 5, "Tier2");
		goto Zombieman;
	ContentLocustVarietyPack:
		TNT1 A 0;
		TNT1 A 0 A_Jump(128, "HellRazer");
		goto Zombieman;
	Tier2:
		TNT1 A 0;
		TNT1 A 0 A_Jump(128, "HellRazer");
		goto Zombieman;
	Zombieman:
		TNT1 A 0 A_SpawnItemEx("MetaZombieman",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL,0,tid);
		stop;
	HellRazer:
		TNT1 A 0 A_SpawnItemEx("MetaHellRazer",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL,0,tid);
		stop;
	}
}

class ShotgunGuySpawner : MetaSpawner replaces ShotgunGuy
{
	States
	{
	Spawn:
		SPOS A 0;
		TNT1 A 0 A_RadiusGive ("PossessedRadar", 512, RGF_MONSTERS);
		TNT1 A 0 A_JumpIf(meta_noalts_actors, "ShotgunGuy");
		TNT1 A 0 A_JumpIf(meta_contentlocust, "ContentLocustVarietyPack");
		TNT1 A 0 A_JumpIf(meta_episodicspawns && CallACS("Item_GameDetector", 0, 0, 0) >= 2, "EpisodicSelector");
		goto Doom2Selector;
	EpisodicSelector:
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 3, "Tier2");
		goto ShotgunGuy;
	Doom2Selector:
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 4, "Tier2");
		goto ShotgunGuy;
	ContentLocustVarietyPack:
		TNT1 A 0;
		TNT1 A 0 A_Jump(128, "ZSec");
		goto ShotgunGuy;
	Tier2:
		TNT1 A 0;
		TNT1 A 0 A_Jump(128, "ZSec");
		goto ShotgunGuy;
	ZSec:
		TNT1 A 0 A_SpawnItemEx("MetaZSec",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL,0,tid);
		stop;
	ShotgunGuy:
		TNT1 A 0 A_SpawnItemEx("MetaShotgunGuy",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL,0,tid);
		stop;
	}
}

class ChaingunGuySpawner : MetaSpawner replaces ChaingunGuy
{	
	States
	{
	Spawn:
		CPOS A 0;
		TNT1 A 0 A_RadiusGive ("PossessedRadar", 512, RGF_MONSTERS);
		TNT1 A 0 A_JumpIf(meta_noalts_actors, "MachineGunGuy");
		TNT1 A 0 A_JumpIf(meta_contentlocust, "ContentLocustVarietyPack");
		TNT1 A 0 A_JumpIf(meta_episodicspawns && CallACS("Item_GameDetector", 0, 0, 0) >= 2, "EpisodicSelector");
		goto Doom2Selector;
	EpisodicSelector:
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 6, "Tier3");
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 2, "Tier2");
		goto MachineGunGuy;
	Doom2Selector:
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 13, "Tier3");
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 4, "Tier2");
		goto MachineGunGuy;
	ContentLocustVarietyPack:
		TNT1 A 0;
		TNT1 A 0 A_Jump(128, "ChainGunGuy", "AssassinGuy");
		goto MachineGunGuy;
	Tier2:
		TNT1 A 0;
		TNT1 A 0 A_Jump(128, "ChainGunGuy");
		goto MachineGunGuy;
	Tier3:
		TNT1 A 0;
		TNT1 A 0 A_Jump(64, "AssassinGuy");
		TNT1 A 0 A_Jump(128, "ChainGunGuy");
		goto MachineGunGuy;
	MachineGunGuy:
		TNT1 A 0 A_SpawnItemEx("MetaMachineGunGuy",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		stop;
	ChainGunGuy:
		TNT1 A 0 A_SpawnItemEx("MetaChainGunGuy",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		stop;
	AssassinGuy:
		TNT1 A 0 A_SpawnItemEx("MetaAssassinGuy",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		stop;
	}
}

class ImpSpawner : MetaSpawner replaces DoomImp
{
	States
	{
	Spawn:
		TROO A 0;
		TNT1 A 0 A_JumpIf(meta_noalts_actors, "Imp");
		TNT1 A 0 A_JumpIf(meta_contentlocust, "ContentLocustVarietyPack");
		TNT1 A 0 A_JumpIf(meta_episodicspawns && CallACS("Item_GameDetector", 0, 0, 0) >= 2, "EpisodicSelector");
		goto Doom2Selector;
	EpisodicSelector:
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 7, "Tier3");
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 2, "Tier2");
		goto Imp;
	Doom2Selector:
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 12, "Tier3");
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 3, "Tier2");
		goto Imp;
	ContentLocustVarietyPack:
		TNT1 A 0;
		TNT1 A 0 A_Jump(64, "NightmareImp", "ImpLord");
		goto Imp;
	Tier2:
		TNT1 A 0;
		TNT1 A 0 A_JumpIf(CallACS("Spectre_SectorLight", 0, 0, 0) != 1, "LetsGetNightmarish");
		goto Imp;
	Tier3:
		TNT1 A 0;
		TNT1 A 0 A_JumpIf(CallACS("Spectre_SectorLight", 0, 0, 0) != 1, "LetsGetNightmarishVarietyPack");
		TNT1 A 0 A_Jump(64, "ImpLord");
		goto Imp;
	VarietyPack:
		TNT1 A 0;
		TNT1 A 0 A_JumpIf(CallACS("Spectre_SectorLight", 0, 0, 0) != 1, "LetsGetNightmarishVarietyPack");
		TNT1 A 0 A_Jump(64, "ImpLord");
		goto Imp;
	LetsGetNightmarish:
		TNT1 A 0;
		TNT1 A 0 A_Jump(128, "NightmareImp");
		goto Imp;
	LetsGetNightmarishVarietyPack:
		TNT1 A 0;
		TNT1 A 0 A_Jump(128, "NightmareImp");
		TNT1 A 0 A_Jump(64, "ImpLord");
		goto Imp;
	Imp:
		TNT1 A 0 A_SpawnItemEx("MetaDoomImp",0,0,8,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		stop;
	NightmareImp:
		TNT1 A 0 A_SpawnItemEx("MetaNightmareImp",0,0,8,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		stop;
	ImpLord:
		TNT1 A 0 A_SpawnItemEx("MetaDoomImpLord",0,0,8,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		stop;
	}
}

class PinkySpawner : MetaSpawner replaces Demon
{	
	States
	{
	Spawn:
		SARG A 0;
		TNT1 A 0 A_JumpIf(meta_noalts_actors, "Pinky");
		TNT1 A 0 A_JumpIf(meta_contentlocust, "ContentLocustVarietyPack");
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 2, "IntroduceTheDogs");
		goto Pinky;
	IntroduceTheDogs:
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("PossessedRadar", 1, "DogsWeighted");
	DogsUnweighted:
		TNT1 A 0; //A_Log("Demon Bias!")
		TNT1 A 0 A_Jump(64, "LotsofDogs");
		goto Doom2Selector;
	DogsWeighted:
		TNT1 A 0; //A_Log("Dog Bias!")
		TNT1 A 0 A_Jump(192, "LotsofDogs");
		TNT1 A 0 A_JumpIf(meta_episodicspawns && CallACS("Item_GameDetector", 0, 0, 0) >= 2, "EpisodicSelector");
		goto Doom2Selector;
	EpisodicSelector:
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 4, "Tier2");
		goto Pinky;
	Doom2Selector:
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 8, "Tier2");
		goto Pinky;
	ContentLocustVarietyPack:
		TNT1 A 0;
		TNT1 A 0 A_Jump(64, "IntroduceTheDogs");
		TNT1 A 0 A_Jump(64, "BullDemon");
		goto Pinky;
	LotsOfDogs:
		TNT1 A 0; //A_Log("Dog Spawned")
		TNT1 A 0 A_JumpIf(meta_contentlocust, "ContentLocustDogs");
		TNT1 A 0
		{
			if (meta_mapbreakers)
			{
				return A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 12, "DogsTier3");
			} else {
				return A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 6, "DogsTier2");
			}
		}		
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 6, "DogsTier2");
		goto Hellhound;
	DogsTier2:
		TNT1 A 0; 
		TNT1 A 0 A_Jump(128, "DemonDog");
		goto Hellhound;
	DogsTier3:
		TNT1 A 0; 
		TNT1 A 0 A_Jump(128, "DemonDog", "Cerberus");
		goto Hellhound;
	Tier2:
		TNT1 A 0; 
		TNT1 A 0 A_Jump(64, "BullDemon");
		goto Pinky;
	ContentLocustDogs:
		TNT1 A 0;
		TNT1 A 0 
		{
			if (meta_mapbreakers)
			{
				A_Jump(128, "DemonDog");
			} else {
				A_Jump(128, "DemonDog", "Cerberus");
			}
		}
		goto Hellhound;
	Hellhound:
		TNT1 A 0 A_SpawnItemEx("MetaHellhound",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		stop;
	DemonDog:
		TNT1 A 0 A_SpawnItemEx("MetaDemonDog",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		stop;
	Cerberus:
		TNT1 A 0 A_SpawnItemEx("MetaCerberus",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		stop;
	Pinky:
		TNT1 A 0 A_SpawnItemEx("MetaDemon",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		stop;
	BullDemon:
		TNT1 A 0 A_SpawnItemEx("MetaBullDemon",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		stop;
	}
}

class DogSpawner : PinkySpawner replaces MBFHelperDog
{
	States
	{
	Spawn:
		DOGS A 0;
		TNT1 A 0 A_JumpIf(meta_noalts_actors, "Hellhound");
		goto LotsOfDogs;
	}
}

class SpectreSpawner : MetaSpawner replaces Spectre
{
	Default
	{
	RenderStyle "OptFuzzy";
	}
	
	States
	{
	Spawn:
		SARG E 0;
		TNT1 A 0 A_JumpIf(meta_noalts_actors, "Spectre");
		TNT1 A 0 A_JumpIf(meta_contentlocust, "ContentLocustVarietyPack");
		TNT1 A 0 A_JumpIf(CallACS("Spectre_SectorLight", 0, 0, 0) == 1, "BrightMap");
		goto Darkmap;
	BrightMap:
		TNT1 A 0;
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 5, "BrightMapVarietyPack");
		goto Spectre;
	DarkMap:
		TNT1 A 0; 
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 5, "DarkMapVarietyPack");
		TNT1 A 0 A_Jump(80, "Trite");
		goto Brightmap;
	BrightMapVarietyPack:
		TNT1 A 0;
		TNT1 A 0 A_Jump(128, "Sawcubus");
		goto Spectre;
	DarkMapVarietyPack:
		TNT1 A 0;
		TNT1 A 0 A_Jump(128, "NightmareSpectre");
		goto Spectre;
	ContentLocustVarietyPack:
		TNT1 A 0;
		TNT1 A 0 A_Jump(128, "NightmareSpectre", "Sawcubus");
		TNT1 A 0 A_Jump(64, "Trite");
		goto Spectre;
	Spectre:
		TNT1 A 0 A_SpawnItemEx("MetaSpectre",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		stop;
	NightmareSpectre:
		TNT1 A 0 A_SpawnItemEx("MetaNightmareSpectre",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		stop;
	Sawcubus:
		TNT1 A 0 A_SpawnItemEx("MetaSawcubus",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		stop;
	Trite:
		TNT1 A 0 A_JumpIf(meta_nospoders, "Spectre");
		TNT1 A 16 A_SpawnItemEx("MetaTrite",0,0,0,random(0,16),random(0,16),0,random(0,360),SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		TNT1 A 16 A_SpawnItemEx("MetaTrite",0,0,0,random(0,16),random(0,16),0,random(0,360),SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		TNT1 A 16 A_SpawnItemEx("MetaTrite",0,0,0,random(0,16),random(0,16),0,random(0,360),SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		stop;
	}
}

class CacodemonSpawner : MetaSpawner replaces Cacodemon
{
	States
	{
	Spawn:
		HEAD A 0;
		TNT1 A 0 A_JumpIf(meta_noalts_actors, "Cacodemon");
		TNT1 A 0 A_JumpIf(meta_contentlocust, "ContentLocustVarietyPack");
		TNT1 A 0 A_JumpIf(meta_episodicspawns && CallACS("Item_GameDetector", 0, 0, 0) >= 2, "EpisodicSelector");
		goto Doom2Selector;
	EpisodicSelector:
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 7, "Tier3");
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 3, "Tier2");
		goto Cacodemon;
	Doom2Selector:
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 19, "Tier3");
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 7, "Tier2");
		goto Cacodemon;
	Tier2:
		TNT1 A 0 A_Jump(72, "Malwraith");
		goto Cacodemon;
	ContentLocustVarietyPack:
	Tier3:
		TNT1 A 0 
		{
			if (meta_mapbreakers)
			{
				return A_Jump(64, "Malwraith", "Wretched");
			} else {
				return A_Jump(256, "Tier2");
			}
		}
		goto Cacodemon;
	Cacodemon:
		TNT1 A 0 A_SpawnItemEx("MetaCacodemon",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		stop;
	Malwraith:
		TNT1 A 0 A_SpawnItemEx("MetaMalwraith",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		stop;
	Wretched:
		TNT1 A 0 A_SpawnItemEx("MetaWretched",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		stop;
	}
}

class HellKnightSpawner : MetaSpawner replaces HellKnight
{
	States
	{
	Spawn:
		BOS2 A 0;
		TNT1 A 0 A_SpawnItemEx("MetaHellKnight",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		stop;
	}
}

class PainElementalSpawner : MetaSpawner replaces PainElemental
{	
	States
	{
	Spawn:
		PAIN A 0;
		TNT1 A 0 A_JumpIf(meta_noalts_actors, "PainElemental");
		TNT1 A 0 A_JumpIf(meta_contentlocust, "ContentLocustVarietyPack");
		TNT1 A 0 A_JumpIf(meta_episodicspawns && CallACS("Item_GameDetector", 0, 0, 0) >= 2, "EpisodicSelector");
		goto Doom2Selector;
	EpisodicSelector:
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 5, "Tier2");
		goto PainElemental;
	Doom2Selector:
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 10, "Tier2");
		goto PainElemental;
	ContentLocustVarietyPack:
	Tier2:
		TNT1 A 0 A_Jump(64, "Beholder", "Rahovart");
		goto PainElemental;
	PainElemental:
		TNT1 A 0 A_SpawnItemEx("MetaPainElemental",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		stop;
	Beholder:
		TNT1 A 0 A_SpawnItemEx("MetaBeholder",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		stop;
	Rahovart:
		TNT1 A 0 A_SpawnItemEx("MetaRahovart",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		stop;
	}
}

class LostSoulSpawner : MetaSpawner replaces LostSoul
{

	States
	{
	Spawn:
		SKUL A 0;
		TNT1 A 0 A_JumpIf(meta_noalts_actors, "LostSoul");
		TNT1 A 0 A_JumpIf(meta_contentlocust, "ContentLocustVarietyPack");
		TNT1 A 0 A_JumpIf(meta_episodicspawns && CallACS("Item_GameDetector", 0, 0, 0) >= 2, "EpisodicSelector");
		goto Doom2Selector;
	EpisodicSelector:
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 3, "VarietyPack");
		goto LostSoul;
	Doom2Selector:
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 4, "VarietyPack");
		goto LostSoul;
	ContentLocustVarietyPack:
		TNT1 A 0;
		TNT1 A 0 A_Jump(128, "Phantom");
		goto LostSoul;
	VarietyPack:
		TNT1 A 0;
		TNT1 A 0 A_Jump(128, "Phantom");
		goto LostSoul;
	LostSoul:
		TNT1 A 0 A_SpawnItemEx("MetaLostSoul",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		stop;
	Phantom:
		TNT1 A 0 A_SpawnItemEx("MetaPhantom",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		stop;
	}
}

class ArchVileSpawner : MetaSpawner replaces ArchVile
{
	States
	{
	Spawn:
		VILE A 0;
		TNT1 A 0 A_JumpIf(meta_noalts_actors, "Archvile");
		TNT1 A 0 A_JumpIf(meta_contentlocust, "ContentLocustVarietyPack");
		TNT1 A 0 A_JumpIf(meta_episodicspawns && CallACS("Item_GameDetector", 0, 0, 0) >= 2, "EpisodicSelector");
		goto Doom2Selector;
	EpisodicSelector:
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 5, "VarietyPack");
		goto Archvile;
	Doom2Selector:
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 20, "VarietyPack");
		goto Archvile;
	VarietyPack:
		TNT1 A 0 A_Jump(72, "Summoner");
		goto Archvile;
	ContentLocustVarietyPack:
		TNT1 A 0 A_Jump(128, "Summoner");
		goto Archvile;
	Archvile:
		TNT1 A 0 A_SpawnItemEx("MetaArchVile",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		stop;
	Summoner:
		TNT1 A 0 A_SpawnItemEx("MetaSummoner",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		stop;
	}
}

class RevenantSpawner : MetaSpawner replaces Revenant
{
	States
	{
	Spawn:
		SKEL A 0;
		TNT1 A 0 A_JumpIf(meta_noalts_actors, "Revenant");
		TNT1 A 0 A_JumpIf(meta_contentlocust, "ContentLocustVarietyPack");
		TNT1 A 0 A_JumpIf(meta_episodicspawns && CallACS("Item_GameDetector", 0, 0, 0) >= 2, "EpisodicSelector");
		goto Doom2Selector;
	EpisodicSelector:
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 5, "VarietyPack");
		goto Revenant;
	Doom2Selector:
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 10, "VarietyPack");
		goto Revenant;
	ContentLocustVarietyPack:
		TNT1 A 0;
		TNT1 A 0 A_Jump(128, "Fiend");
		goto Revenant;
	VarietyPack:
		TNT1 A 0;
		TNT1 A 0 A_Jump(96, "Fiend");
		goto Revenant;
	Revenant:
		TNT1 A 0 A_SpawnItemEx("MetaRevenant",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		stop;
	Fiend:
		TNT1 A 0 A_SpawnItemEx("MetaFiend",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		stop;
	}
}

// These ones need special attention due to +BOSSDEATH handling

class MetaBossSpawner : MetaSpawner
{
	Default
	{
		Health 0x7fffffff;
		Height 0;
		Radius 0;
		MONSTER;
		-COUNTKILL
		-SOLID
		+NOCLIP
		+NOTDMATCH
		+BOSSDEATH
	}
	
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0;
		goto CreepyStalker;
	CreepyStalker:
		TNT1 A 1; // SFX: HEAVY BREATHING
		loop;
	Death:
		TNT1 A 1;
		TNT1 A 1 A_BossDeath;
		Stop;
	}
}

class BaronOfHellSpawner : MetaBossSpawner replaces BaronOfHell
{
	States
	{
	Spawn:
		BOSS A 0;
		TNT1 A 0 A_SpawnItemEx("MetaBaronOfHell",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		goto CreepyStalker;
	}
}

class ArachnotronSpawner : MetaBossSpawner replaces Arachnotron
{
	States
	{
	Spawn:
		BSPI A 0;
		TNT1 A 0 A_JumpIf(meta_noalts_actors, "Arach");
		TNT1 A 0 A_JumpIf(meta_contentlocust, "ContentLocustVarietyPack");
		TNT1 A 0 A_JumpIf(meta_episodicspawns && CallACS("Item_GameDetector", 0, 0, 0) >= 2, "EpisodicSelector");
		goto Doom2Selector;
	EpisodicSelector:
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 4, "Tier2");
		goto Arach;
	Doom2Selector:
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 8, "Tier2");
		goto Arach;
	ContentLocustVarietyPack:
		TNT1 A 0 A_Jump(90,"Borg");
		goto Arach;
	Tier2:
		TNT1 A 0 A_Jump(128,"Borg");
		goto Arach;
	Arach:
		TNT1 A 0 A_SpawnItemEx("MetaArachnotron",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		goto CreepyStalker;
	Borg:
		TNT1 A 0 A_SpawnItemEx("MetaSpiborg",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		goto CreepyStalker;
	}
}

class MancubusSpawner : MetaBossSpawner replaces Fatso
{
	States
	{
	Spawn:
		FATT A 0;
		TNT1 A 0 A_JumpIf(meta_noalts_actors, "Manc");
		TNT1 A 0 A_JumpIf(meta_contentlocust, "ContentLocustVarietyPack");
		TNT1 A 0 A_JumpIf(meta_episodicspawns && CallACS("Item_GameDetector", 0, 0, 0) >= 2, "EpisodicSelector");
		goto Doom2Selector;
	EpisodicSelector:
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 7, "Tier3");
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 3, "Tier2");
		goto Manc;
	Doom2Selector:
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 16, "Tier3");
		TNT1 A 0 A_JumpIf(CallACS("Monster_ReturnMaps", 0, 0, 0) >= 8, "Tier2");
		goto Manc;
	ContentLocustVarietyPack:
		TNT1 A 0 A_Jump(90,"Behemoth", "Cyber");
		goto Manc;
	Tier2:
		TNT1 A 0 A_Jump(128,"Behemoth");
		goto Manc;
	Tier3:
		TNT1 A 0 A_Jump(128,"Behemoth", "Cyber");
		goto Manc;
	Manc:
		TNT1 A 0 A_SpawnItemEx("MetaMancubus",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		goto CreepyStalker;
	Behemoth:
		TNT1 A 0 A_SpawnItemEx("MetaBehemoth",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		goto CreepyStalker;
	Cyber:
		TNT1 A 0 A_SpawnItemEx("MetaCyberManc",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		goto CreepyStalker;
	}
}

class CyberdemonSpawner : MetaBossSpawner replaces Cyberdemon
{
	States
	{
	Spawn:
		CYBR A 0;
		TNT1 A 0 A_SpawnItemEx("MetaCyberdemon",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		goto CreepyStalker;
	}
}

// For "Doom 64 for Doom 2"
class CyberdemonSpawner_D64D2 : CyberdemonSpawner
{
	States
	{
	Death:
		TNT1 A 1;
		TNT1 A 1 A_KeenDie;
		Stop;
	}
}



class SpiderMastermindSpawner : MetaBossSpawner replaces SpiderMastermind
{
	States
	{
	Spawn:
		SPID A 0;
		TNT1 A 0 A_SpawnItemEx("MetaSpiderMastermind",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		goto CreepyStalker;
	}
}

// Doom 64 Shit

class NightmareImpSpawner : MetaSpawner // replaces 64NightmareImp
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_SpawnItemEx("MetaNightmareImp",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION,0,tid);
		stop;
	}
}

// stealth monsters are shit for losers. let's fix this.
class StealthArachnotronSpawner : ArachnotronSpawner replaces StealthArachnotron {}
class StealthArchVileSpawner : ArchVileSpawner replaces StealthArchvile {}
class StealthBaronOfHellSpawner : BaronOfHellSpawner replaces StealthBaron {}
class StealthCacodemonSpawner : CacodemonSpawner replaces StealthCacodemon {}
class StealthChaingunGuySpawner : ChaingunGuySpawner replaces StealthChaingunGuy {}
class StealthDemonSpawner : SpectreSpawner replaces StealthDemon {}
class StealthHellKnightSpawner : HellKnightSpawner replaces StealthHellKnight {}
class StealthImpSpawner : ImpSpawner replaces StealthDoomImp {}
class StealthMancubusSpawner : MancubusSpawner replaces StealthFatso {}
class StealthRevenantSpawner : RevenantSpawner replaces StealthRevenant {}
class StealthShotgunGuySpawner : ShotgunGuySpawner replaces StealthShotgunGuy {}
class StealthZombiemanSpawner : ZombiemanSpawner replaces StealthZombieMan {}

// Optional Content Spawners. These don't use the standard replacement method.
class WolfSSSpawner : MetaSpawner
{
	States
	{
	Spawn:
		SSWV A 0;
		TNT1 A 0 A_JumpIf(meta_noalts_actors, "WolfSS");
		TNT1 A 0 A_Jump (256, "WolfSS", "WolfSNES", "WolfApple", "WolfMac", "WolfJava");
	WolfSS:
		TNT1 A 0 A_SpawnItemEx("MetaWolfensteinSS",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION);
		stop;
	WolfSNES:
		TNT1 A 0 A_SpawnItemEx("MetaWolfensteinSNES",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION);
		stop;
	WolfApple:
		TNT1 A 0 A_SpawnItemEx("MetaWolfensteinApple",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION);
		stop;
	WolfMac:
		TNT1 A 0 A_SpawnItemEx("MetaWolfensteinMacOS",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION);
		stop;
	WolfJava:
		TNT1 A 0 A_SpawnItemEx("MetaWolfensteinJava",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION);
		stop;
	}
}

class KeenSpawner : MetaSpawner
{
	Default
	{
		Health 0x7fffffff;
		Height 0;
		Radius 0;
		MONSTER;
		-COUNTKILL
		-SOLID
		+NOCLIP
		+NOTDMATCH
		+SPAWNCEILING 
	}
	
	States
	{
	Spawn:
		KEEN A 0;
		KEEN A 0 A_JumpIf(meta_noalts_actors, "Keen");
		KEEN A 0 A_Jump(256,"Keen","Budo","Dave","Hovertank","Rover","Catacomb");
	Keen:
		TNT1 A 0 A_SpawnItemEx("MetaKeen",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION|SXF_TRANSFERAMBUSHFLAG);
		goto CreepyStalker;
	Budo:
		TNT1 A 0 A_SpawnItemEx("MetaBudo",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION|SXF_TRANSFERAMBUSHFLAG);
		goto CreepyStalker;
	Dave:
		TNT1 A 0 A_SpawnItemEx("MetaDave",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION|SXF_TRANSFERAMBUSHFLAG);
		goto CreepyStalker;
	Hovertank:
		TNT1 A 0 A_SpawnItemEx("MetaHovertank",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION|SXF_TRANSFERAMBUSHFLAG);
		goto CreepyStalker;
	Rover:
		TNT1 A 0 A_SpawnItemEx("MetaRover",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION|SXF_TRANSFERAMBUSHFLAG);
		goto CreepyStalker;
	Catacomb:
		TNT1 A 0 A_SpawnItemEx("MetaCatacomb",0,0,0,0,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION|SXF_TRANSFERAMBUSHFLAG);
		goto CreepyStalker;
	CreepyStalker:
		TNT1 A 1; // SFX: HEAVY BREATHING
		loop;
	Death:
		TNT1 A 1;
		TNT1 A 1 A_KeenDie;
		TNT1 A -1;
		Stop;
	}
}