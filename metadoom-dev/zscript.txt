/*
----------------------------
MetaDoom
Actor Definitions
ZScript
----------------------------
*/

version 2.5

// Monsters
#include "actors/monsters/metadoomactor.zsc"
#include "actors/monsters/metalostsoul.zsc"
#include "actors/monsters/metatrite.zsc"

class MetaDoomStatusScreen : DoomStatusScreen
{
	override void Drawer (void)
	{
		switch (CurState)
		{
		case StatCount:
			// draw animated background
			bg.drawBackground(CurState, false, false);
			widescreenDatShit();
			drawStats();
			break;
	
		case ShowNextLoc:
			drawShowNextLoc();
			widescreenDatShit();
			break;
	
		case LeavingIntermission:
			break;

		default:
			drawNoState();
			break;
		}
	}


	int DrawCenterText(int y, PatchInfo pinfo, String stringname)
	{
		String string = Stringtable.Localize(stringname);
		int midx = screen.GetWidth() / 2;

		screen.DrawText(pinfo.mFont, Font.CR_RED, midx - pinfo.mFont.StringWidth(string) * CleanXfac/2, y, string, DTA_CleanNoMove, true);
		return y + pinfo.mFont.GetHeight() * CleanYfac;
	}

	int drawLF ()
	{
		int y = TITLEY * CleanYfac;

		y = DrawName(y, wbs.LName0, lnametexts[0]);
	
		// Adjustment for different font sizes for map name and 'finished'.
		y -= ((mapname.mFont.GetHeight() - finished.mFont.GetHeight()) * CleanYfac) / 4;

		// draw "Finished!"
		if (y < (NG_STATSY - finished.mFont.GetHeight()*3/4) * CleanYfac)
		{
			// don't draw 'finished' if the level name is too tall
			y = DrawCenterText(y, finished, "$TXT_IMFINISH");
		}
		return y;
	}
	
	void drawEL ()
	{
		int y = TITLEY * CleanYfac;

		y = DrawCenterText(y, entering, "TXT_IMENTER");
		y += entering.mFont.GetHeight() * CleanYfac / 4;
		DrawName(y, wbs.LName1, lnametexts[1]);
	}
	
	void widescreenDatShit ()
	{
		TextureID interborder = TexMan.CheckForTexture("INTBACK", TexMan.Type_MiscPatch);
		screen.DrawTexture (interborder, true, -800, -64, DTA_Clean, true);
		screen.DrawTexture (interborder, true, 320, -64, DTA_Clean, true);
	}
	
	override void drawStats (void)
	{
		// line height
		int lh = IntermissionFont.GetHeight() * 3 / 2;

		drawLF();
	
		screen.DrawText (BigFont, Font.CR_UNTRANSLATED, SP_STATSX, SP_STATSY-4, Stringtable.Localize("$TXT_IMKILLS"), DTA_Clean, true, DTA_Shadow, true);
		screen.DrawText (BigFont, Font.CR_UNTRANSLATED, SP_STATSX, SP_STATSY+lh-4, Stringtable.Localize("$TXT_IMITEMS"), DTA_Clean, true, DTA_Shadow, true);
		screen.DrawText (BigFont, Font.CR_UNTRANSLATED, SP_STATSX, SP_STATSY+2*lh-4, Stringtable.Localize("$TXT_IMSECRETS"), DTA_Clean, true, DTA_Shadow, true);
		screen.DrawText (BigFont, Font.CR_UNTRANSLATED, SP_STATSX, SP_STATSY+3*lh-4, Stringtable.Localize("$TXT_IMSCORE"), DTA_Clean, true, DTA_Shadow, true);

		int countpos = gameinfo.gametype==GAME_Strife? 285:270;
		
		drawNum(IntermissionFont, countpos, SP_STATSY+3*lh, players[consoleplayer].mo.score, 0, false, Font.CR_RED);

		if (sp_state >= 2)
		{
			drawPercent (IntermissionFont, countpos, SP_STATSY, cnt_kills[0], wbs.maxkills);
		}
		if (sp_state >= 4)
		{
			drawPercent (IntermissionFont, countpos, SP_STATSY+lh, cnt_items[0], wbs.maxitems);
		}
		if (sp_state >= 6)
		{
			drawPercent (IntermissionFont, countpos, SP_STATSY+2*lh-2, cnt_secret[0], wbs.maxsecret);
		}
		if (sp_state >= 8)
		{
			screen.DrawText (BigFont, Font.CR_UNTRANSLATED, SP_TIMEX, SP_TIMEY-4, Stringtable.Localize("$TXT_IMTIME"), DTA_Clean, true, DTA_Shadow, true);
			drawTime (160 - SP_TIMEX, SP_TIMEY, cnt_time);
			
			if (wbs.partime)
			{
				screen.DrawText (BigFont, Font.CR_UNTRANSLATED, 160 + SP_TIMEX, SP_TIMEY-4, Stringtable.Localize("$TXT_IMPAR"), DTA_Clean, true, DTA_Shadow, true);
				drawTime (320 - SP_TIMEX, SP_TIMEY, cnt_par);
			}
			
			if (wi_showtotaltime)
			{
				screen.DrawText (BigFont, Font.CR_UNTRANSLATED, SP_TIMEX, SP_TIMEY+lh-4, Stringtable.Localize("$TXT_IMTOTAL"), DTA_Clean, true, DTA_Shadow, true);
				drawTime (160 - SP_TIMEX, SP_TIMEY + lh, cnt_total_time, true);	// no 'sucks' for total time ever!
			}
		}
	}
}